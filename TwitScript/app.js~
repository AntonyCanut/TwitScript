// using npm twitter
var Twitter = require('./node_modules/twitter');
var s = require('string');
var exec = require('child_process').exec;
var fs = require('fs');

// new Object Twitter with login-user
var client = new Twitter({
    consumer_key: 'qX57JAguhF1OFpAWJrov4zOC6',
    consumer_secret: 'jF986liei6NKpetBEx4peFG1G6HrzLJCtgpgGZqDuIsBBxzySa',
    access_token_key: '563290517-MYuwWaQVzkqnnPotXu8s4iOi1bzPOGP6003leNHg',
    access_token_secret: '9J4yEklxDHZtrMiIgM8Tm2IlDec3gq2DreuTgYKGxn751'
});


// variables
var minutes_retweet = 60;
var retweetable = true;
var trackWords = fs.readFileSync('trackwords.txt', 'utf8');
var tracker = fs.readFileSync('trackaccounts.txt', 'utf8');
var trackAccount = "";

// Get values files
trackWords = s(trackWords).replaceAll('\r\n', ' ').s;
trackWords = s(trackWords).replaceAll('\n', ' ').s;
trackWords = s(trackWords).replaceAll('\r', ' ').s;
tracker.split('\r\n').map(function (val) {
    var value = val.split('+').map(function (val2) {
        if (!s(val2).contains('\''))
            return val2;
    });
    trackAccount = trackAccount + value[0] + ', ';
    return val;
});

// Functions
function containSafeWord(tweet) {
    var txt = fs.readFileSync('safewords.txt', 'utf8');
    if (s(txt).contains('\r\n')) {
        var tab = txt.split('\r\n').map(function (val) {
            return val;
        });
    } else if (s(txt).contains('\n')) {
        var tab = txt.split('\n').map(function (val) {
            return val;
        });
    } else {
        var tab = txt.split('\r').map(function (val) {
            return val;
        });
    }

    var isNotSafe = false;

    tab.forEach(function(item){
	    if (s(tweet).toLowerCase().contains(s(item).toLowerCase())){
		isNotSafe = true;
	    }
    });
    return isNotSafe;
}

function containTrackWord(tweet) {
    var txt = fs.readFileSync('trackwords.txt', 'utf8');
    var tab = txt.split(',\r\n').map(function (val) {
        return val;
    });
    var isTrack = false;

    tab.forEach(function(item){
        if (s(tweet).toLowerCase().contains(s(item).toLowerCase()))
            isTrack = true;
    });
    return isTrack;
}

function retweetByWord(tweet) {
    // Filter safe-keyword
    if (!containSafeWord(tweet.text)){
        var myDate = new Date();
        if (retweetable) {
            client.post('statuses/retweet/' + tweet.id_str, function (error, tweet, response) {
                if (error != null) {
                    console.log(error); // log an error
                } else {
                    console.log('-- RETWEET --');
                    console.log('Tweet : ' + myDate.getHours() + 'h' + ((myDate.getMinutes() <= 9) ? ('0' + myDate.getMinutes()) : (myDate.getMinutes())));
                    console.log(tweet.text);
                    console.log('-------------');
                }
            });
            retweetable = false;
        }
    }
}

function retweet(tweet) {
    if (containTrackWord(tweet.text)) {
        if (!containSafeWord(tweet.text)) {
            var myDate = new Date();
            client.post('statuses/retweet/' + tweet.id_str, function (error, tweet, response) {
                if (error != null) {
                    console.log(error); // log an error
                } else {
                    console.log('-- RETWEET BY ID & KEYWORDS --');
                    console.log('Tweet : ' + myDate.getHours() + 'h' + ((myDate.getMinutes() <= 9) ? ('0' + myDate.getMinutes()) : (myDate.getMinutes())));
                    console.log(tweet.text);
                    console.log('------------------------------');
                }
            });
        }
    }
}
function like_enable() {
    likable = true;
}
function retweet_enable() {
    retweetable = true;
}

// Streams
// Retweet popular by id, Antony Canut (me) - Jonathan Antoine - TheVerge - Cyril Cathala - Rudy Huyn - David Catuhe - Julien Corioland
//
// Make id here : http://gettwitterid.com/
client.stream('statuses/filter', {
    follow: trackAccount
}, function (stream) {
    console.log('Démarrage du stream sur Personnes.');
    stream.on('data', function (tweet) {
        if (s(trackAccount).toLowerCase().contains(tweet.user.id_str)) {
            retweet(tweet);
        }
    });

    stream.on('error', function (error) {
        console.log(error);
    });
});

// Like and retweet by popular word
client.stream('statuses/filter', {
    track: trackWords,
    language: 'en, fr'
}, function (stream) {
    console.log('Démarrage du stream sur Trackwords.');
    stream.on('data', function (tweet) {
        retweetByWord(tweet);
    });

    stream.on('error', function (error) {
        console.log(error);
    });
});

// Timer for Retweet and like
setInterval(like_enable, minutes_like * 60000);
setInterval(retweet_enable, minutes_retweet * 60000);